# This workflow is set up to build a PDF and upload it as part of a release
# when a tag is pushed to the repository.
name: build pdf

on:
  push:
    tags:
    - 'v*' # Triggers on Push to Tag (v*): The workflow is triggered when you push a tag that starts with v (e.g., v1.0.0).

jobs:
  build:
    name: build pdf and upload release
    runs-on: ubuntu-latest
    steps:
      # uses the actions/checkout@v4 action to check out the code from the repository.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # sets up Node.js using the version specified in the package.json file and caches dependencies using Yarn.
      - uses: actions/setup-node@v4
        with:
          node-version-file: 'package.json'
          cache: 'yarn'
      # Installs all the project dependencies with "yarn install --frozen-lockfile".
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      # generate a PDF (from Markdown).
      - name: build pdf
        run: yarn run build:pdf
      # creates a release using actions/create-release@v1.
      # The release name and tag come from the GitHub ref (the tag that triggered the workflow).
      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      # The generated PDF (located at ./docs/index.pdf) is uploaded to the release as an asset.
      - name: upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./docs/index.pdf
          asset_name: index.pdf
          asset_content_type: application/pdf
